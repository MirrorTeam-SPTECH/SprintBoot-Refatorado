# ============================================
# Production Configuration
# ============================================
# Use this profile for production deployment

spring.application.name=PortalChurras

# ============================================
# Database Configuration (PostgreSQL)
# ============================================
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/portalchurras}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# ============================================
# JPA/Hibernate Configuration
# ============================================
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# ============================================
# H2 Console (Disabled in production)
# ============================================
spring.h2.console.enabled=false

# ============================================
# Mercado Pago Configuration
# ============================================
mercado-pago.access-token=${MERCADO_PAGO_ACCESS_TOKEN}
mercado-pago.public-key=${MERCADO_PAGO_PUBLIC_KEY}
mercado-pago.client-id=${MERCADO_PAGO_CLIENT_ID}
mercado-pago.client-secret=${MERCADO_PAGO_CLIENT_SECRET}
mercado-pago.webhook-secret=${MERCADO_PAGO_WEBHOOK_SECRET}
mercado-pago.success-url=${PAYMENT_SUCCESS_URL}
mercado-pago.failure-url=${PAYMENT_FAILURE_URL}
mercado-pago.pending-url=${PAYMENT_PENDING_URL}

# ============================================
# Server Configuration
# ============================================
server.port=${PORT:8080}
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.compression.enabled=true
server.http2.enabled=true

# ============================================
# Redis Configuration
# ============================================
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}
spring.redis.password=${REDIS_PASSWORD:}
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000

# ============================================
# RabbitMQ Configuration
# ============================================
spring.rabbitmq.host=${RABBITMQ_HOST}
spring.rabbitmq.port=${RABBITMQ_PORT}
spring.rabbitmq.username=${RABBITMQ_USER}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}

# ============================================
# JWT Configuration (SECURITY - MANDATORY!)
# ============================================
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION:3600000}

# ============================================
# CORS Configuration (SECURITY)
# ============================================
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:https://portalchurras.com.br}

# ============================================
# WebSocket Configuration (SECURITY)
# ============================================
websocket.allowed.origins=${WEBSOCKET_ALLOWED_ORIGINS:https://portalchurras.com.br}

# ============================================
# Logging Configuration
# ============================================
logging.level.root=WARN
logging.level.com.exemple.apipagamento.portalchurras=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ============================================
# Actuator Configuration
# ============================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true

# ============================================
# SSL/TLS Configuration (if using HTTPS)
# ============================================
#server.ssl.enabled=true
#server.ssl.key-store=classpath:keystore.p12
#server.ssl.key-store-password=${KEYSTORE_PASSWORD}
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=tomcat
